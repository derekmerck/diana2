DIANA Docker Swarm Stacks
=========================

| Derek Merck
| derek_merck@brown.edu
| Rhode Island Hospital and Brown University
| Providence, RI

|Build Status| |Coverage Status| |Doc Status|

| Source: https://www.github.com/derekmerck/diana2
| Documentation: https://diana.readthedocs.io
| Image: https://cloud.docker.com/repository/docker/derekmerck/diana2

Admin Services
--------------

A base stack and provides `Portainer <https://portainer.io>`__ and
`Traefik <https://traefik.io>`__ services and networks.

Setup
~~~~~

.. code:: bash

    $ source sample.env
    $ docker-stack -f admin/admin-stack.yml

Exposes
~~~~~~~

-  Traefik: ``http://host:8080``
-  Portainer: ``http://host/portainer``

Integration
~~~~~~~~~~~

Other stacks can attach to the Traefik network by declaring the network
and adding appropriate service labels.

.. code:: yaml

    networks:
      admin_proxy_network:
        external: true

Backend Data Services
---------------------

Provides `Postgres <https://www.postgresql.org>`__ database and
`Redis <https://www.redis.com>`__ and
`Splunk <https://www.splunk.com>`__ indexing services and allocates
persistent storage.

.. _setup-1:

Setup
~~~~~

.. code:: bash

    $ source sample.env
    $ docker-stack -f admin/admin-stack.yml
    $ docker-stack -f bacekend-data/postgres-service.yml data
    $ docker-stack -f bacekend-data/redis-service.yml data
    $ docker-stack -f bacekend-data/splunk-service.yml data

.. _exposes-1:

Exposes
~~~~~~~

-  Postgres: ``tcp://postgres:2345``
-  Redis: ``tcp://redis:6543``
-  Splunk: ``http://host/splunk``
-  Splunk: ``http://splunk:{8088,8089}``

DICOM Services
--------------

Provides `Orthanc <https://www.orthanc-server.com>`__ DICOM nodes and
ingress gateways.

.. _setup-2:

Setup
~~~~~

.. code:: bash

    $ source sample.env
    $ docker-stack -f dicom-node/archive-stack.yml

.. _exposes-2:

Exposes
~~~~~~~

-  Orthanc: ``http://host/archive``
-  Orthanc: ``http://host/incoming``

DIANA Worker Services
---------------------

Mock PACS Stack
~~~~~~~~~~~~~~~

Provides an Orthanc DICOM node and fills it continuously with simulated
DICOM headers generated by DIANAâ€™s MockSite daemon.

By default, the orthanc node is exposed at:

-  Orthanc: ``http://host/mock-pacs``
-  Orthanc: ``dcm:MOCKPACS@orthanc-mock:4242``

.. _setup-3:

Setup
~~~~~

.. code:: bash

    $ source sample.env
    $ docker stack deploy -c admin/admin-stack.yml admin
    $ docker-stack deploy -c diana-workers/mock-stack.yml mock

Provisioning
------------

Setup a Swarm
~~~~~~~~~~~~~

.. code:: bash

    $ docker swarm init --advertise-addr <ip_addr>
    $ ssh host2
    > docker swarm join ... etc

Tag unique nodes for the scheduler
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

| The ``storage`` node will be assigned the database backend.
| Any ``bridge`` nodes will be assigned DICOM ingress, routing, and
  bridging services (b/c typically modalities authorize endpoint access
  by specific IP address.)

.. code:: bash

    $ docker node update --label-add storage=true host1   # mounts mass storage
    $ docker node update --label-add bridge=true host2    # registered IP address for DICOM receipt

License
-------

MIT

.. |Build Status| image:: https://travis-ci.org/derekmerck/diana2.svg?branch=master
   :target: https://travis-ci.org/derekmerck/diana2
.. |Coverage Status| image:: https://codecov.io/gh/derekmerck/diana2/branch/master/graph/badge.svg
   :target: https://codecov.io/gh/derekmerck/diana2
.. |Doc Status| image:: https://readthedocs.org/projects/diana/badge/?version=latest
   :target: https://diana.readthedocs.io/en/latest/?badge=latest
