# $ docker stack deploy -c siren.yml siren

version: '3.2'


networks:

  admin_proxy_network:
    external: true   # Created by admin-stack

  service_network:
    driver: overlay
    attachable: true

volumes:
  postgres_data:
    driver_opts:
        type: none
        device: ${DATA_DIR}/${POSTGRES_DATA_DIR}
        o: bind


services:

  diana-transport:

    # Need git pull
    # Need upload files or (2 routes, one for studies/zips)
    # Need route for anonymize_instances orthanc-hobit (in place)
    # command: diana-cli watch -r upload_instances path:/data/incoming orthanc-hobit

    image: derekmerck/diana2
    networks:
      - service_network
    volumes:
      - ${DATA_DIR}:/data
      - ${DATA_DIR}/tmp:/tmp
    environment:
      PYTHONUNBUFFERED: "true"
      ORTHANC_PASSWORD: ${ORTHANC_PASSWORD}
      DIANA_SERVICES: >
        { "hobit": {"ctype": "ObservableOrthanc",
                "host": "orthanc-hobit",
                "password": "${ORTHANC_PASSWORD}",
                "polling_interval": 30 }}
      TZ:               "America/New_York"


  postgres:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - service_network
    environment:
      POSTGRES_PASSWORD:        ${POSTGRES_PASSWORD}
      TZ: "America/New_York"


  orthanc-hobit:
    image: derekmerck/orthanc-confd:latest-amd64
    ports:
      - 4242:42421
    networks:
      - admin_proxy_network
      - service_network
    environment:
      ORTHANC_NAME:             HOBIT Image Registry
      ORTHANC_AET:              HOBIT
      ORTHANC_PASSWORD:         ${ORTHANC_PASSWORD}
      ORTHANC_STORE_COMPRESSED: "true"
      ORTHANC_PG_ENABLED:       "true"
      ORTHANC_PG_STORE_DICOM:   "true"
      ORTHANC_PG_DATABASE:      orthanc_hobit
      ORTHANC_PG_HOST:          postgres
      ORTHANC_PG_USER:          postgres
      ORTHANC_PG_PASSWORD:      ${POSTGRES_PASSWORD}
      ORTHANC_VERBOSE:          "true"
      ORTHANC_WBV_ENABLED:      "true"
      TZ:                       "America/New_York"
    deploy:
      replicas: 2  # Multiple nodes, PG provides data persistence
      labels:
        - "traefik.docker.network=admin_proxy_network"
        - "traefik.port=8042"
        - "traefik.frontend.rule=PathPrefixStrip:/hobit/"
