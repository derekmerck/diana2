# $ docker swarm init --advertise-addr=x.x.x.x --data-path-addr=y.y.y.y
# ## Note -- data-path-addr should be an Internet connected interface
# $ mkdir -p /data/{splunk,postgres,incoming}
# $ docker stack deploy -c admin/admin-stack.yaml admin
# $ docker stack deploy -c admin/splunk-service.yaml admin
# ## Note -- $SPLUNK_HOST must be the swarm IP addr, not localhost
# $ docker stack deploy -c backend/postgres-service.yaml backend
# ## Note: Soft link subscriptions, notify, and env file into this directory for config
# $ ln -s ~/siren.env siren.env
# $ ln -s ~/dev/diana2/apps/siren/notify.txt.j2 notify.txt.j2
# $ ln -s ~/siren_subs subscriptions.yaml
# $ docker stack deploy -c submission-service.yaml siren

---
version: '3.3'

networks:

  admin_proxy_network:
    external: true   # Created by admin-stack

  admin_logging_network:
    external: true   # Created by admin-stack

  backend_data_network:
    external: true   # Created by backend-stack

  service_network:
    driver: overlay
    attachable: true

configs:
  notify_tmpl:
    file: ./notify.txt.j2
  services:
    file: ./services.yaml
  subscriptions:
    file: ./subscriptions.yaml

services:

  diana-transport:

    image: derekmerck/diana2
#    command: >
#      python3 apps/siren/siren.cli start-watcher
#                          path:/incoming hobit
#                          -S @/subscriptions.yaml -E local_smtp -T @/notify.txt.j2
#                          -I splunk
    networks:
      - admin_logging_network
      - service_network
    volumes:
      - type:   bind
        source: $DATA_DIR/incoming
        target: /incoming/hobit
    environment:
      PYTHONUNBUFFERED: "true"
      TZ:               "America/New_York"
      DIANA_SERVICES:   "@/services.yaml"
    env_file:
      - $PWD/config.env

    configs:
      - source: notify_tmpl
        target: /notify.txt.j2
      - source: services
        target: /services.yaml
      - source: subscriptions
        target: /subscriptions.yaml

    logging:
      driver: splunk
      options:
        splunk-url:     "http://${SPLUNK_HOST}:8088"
        splunk-token:   ${SPLUNK_HEC_TOKEN}
        splunk-format:  json
        splunk-index:   logging
        tag:            "{{.Name}}/{{.ID}}"


  orthanc-hobit:
    image: derekmerck/orthanc-wbv:latest-amd64
    ports:
      - 8042:8042
      - 4242:4242
    networks:
      - admin_proxy_network
      - admin_logging_network
      - backend_data_network
      - service_network
    volumes:
      - type: tmpfs
        target: /etc/orthanc
    environment:
      ORTHANC_NAME:             HOBIT Image Registry
      ORTHANC_AET:              HOBIT
      ORTHANC_PASSWORD:         ${ORTHANC_PASSWORD}
      ORTHANC_METADATA_0:       signature,9875
      ORTHANC_STORE_COMPRESSED: "true"
      ORTHANC_PG_ENABLED:       "true"
      ORTHANC_PG_STORE_DICOM:   "true"
      ORTHANC_PG_DATABASE:      orthanc_hobit
      ORTHANC_PG_HOST:          postgres
      ORTHANC_PG_USER:          postgres
      ORTHANC_PG_PASSWORD:      ${POSTGRES_PASSWORD}
      ORTHANC_VERBOSE:          "true"
      ORTHANC_WBV_ENABLED:      "true"
      TZ:                       "America/New_York"

    deploy:
      replicas: 2  # Multiple nodes, PG provides data persistence
      labels:
        - traefik.enable=true
        - traefik.docker.network=admin_proxy_network
        - traefik.http.routers.hobit.rule=PathPrefix("/hobit")
        - traefik.http.middlewares.hobit-stripprefix.stripprefix.prefixes=/hobit
        - traefik.http.routers.hobit.middlewares=hobit-stripprefix@docker
        - traefik.http.services.hobit-service.loadbalancer.server.port=8042
        - traefik.http.services.hobit-service.loadbalancer.sticky=true

    logging:
      driver: splunk
      options:
        splunk-url:     "http://${SPLUNK_HOST}:8088"
        splunk-token:   ${SPLUNK_HEC_TOKEN}
        splunk-format:  json
        splunk-index:   logging
        tag:            "{{.Name}}/{{.ID}}"
