openapi: "3.0.0"

info:
  description: "[DIANA](https://github.com/derekmerck/diana2) API spec."
  version: "1.0.0"
  title: "DIANA"
  contact:
    email: "Derek_Merck@brown.edu"

tags:
- name: "endpoint"
  description: "Direct endpoint operations"
- name: "daemon"
  description: "Monitor and control processing pipelines"
- name: "guid"
  description: "Create reproducible sham user ids"

servers:
  - url: /v1.0
    description: DIANA API version 1.0

paths:
  /endpoint:
    get:
      tags:
      - "endpoint"
      summary:  "List available service endpoints keys and status"
      operationId: "diana-server.endpoints"
      responses:
        "200":
          description: "Successful operation"

  /endpoints/{service_key}/find:
    post:
      tags:
      - "endpoint"
      summary: "Search an endpoint for a dixel"
      operationId: "diana-server.find"
      parameters:
      - name: "service_key"
        in: "path"
        description: "Service endpoint to query"
        required: true
        schema:
          type: "string"
      - name: "domain"
        in: "query"
        description: "Service endpoint domain (if proxying)"
        required: false
        schema:
          type: "string"
      requestBody:
        description: Query dictionary to match
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        "200":
          description: "Successful operation"
        "400":
          description: "Service endpoint failed to respond"
        "405":
          description: "Invalid service endpoint key"

  /guid:
    get:
      tags:
      - "guid"
      summary: "Generate a GUID"
      description: "Multiple status values can be provided with comma separated strings"
      operationId: "diana-server.guid_mint"
      parameters:
      - name: "PatientName"
        in: "query"
        description: "Name of patient to sham"
        required: true
        schema:
          type: "string"
      - name: "PatientBirthDate"
        in: "query"
        description: "Birth date of patient to sham"
        required: false
        schema:
          type: "string"
          format: "date"
      - name: "PatientAge"
        in: "query"
        description: "Age of patient to sham (if no birthday)"
        required: false
        schema:
          type: "string"
          format: int32
      - name: "ReferenceDate"
        in: "query"
        description: "Reference date for age (guid is not reproducible with age alone)"
        required: false
        schema:
          type: "string"
          format: "date"
      - name: "PatientSex"
        in: "query"
        description: "Sex of patient to sham"
        schema:
          type: "string"
          enum:
            - "male"
            - "female"
        required: false
      responses:
        "200":
          description: "Successful operation"

          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/GUID"
        400:
          description: "Invalid status value"


components:

  schemas:

    Dixel:
      type: "object"
      properties:
        DixelID:
          type: "string"
          description: "Dixel id (fn, oid, uid, etc.)"
        DixelLevel:
          type: "string"
          description: "Dixel level"
          enum:
            - "studies"
            - "series"
            - "instances"
        Tags:
          description: "Dictionary of DICOM tags"

    GUID:
      type: "object"
      properties:
        PatientId:
          type: "string"
          description: "Sham patient ID"
          example: "JDS-000-111-222"
        PatientName:
          type: "string"
          description: "Sham patient name"
          example: "DOE^JOHN^S"
        AccessionNumber:
          type: "string"
          description: "Sham accession number"
          example: "abc123456"
        TimeOffset:
          type: "string"
          format: "date-time"
          description: "Time offset for shamming study times"

    Query:
      type: "object"

externalDocs:
  description: "DIANA documentation"
  url: "https://diana.readthedocs.com"